{
    "sourceFile": "prisma/seed.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1754850477941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1754850477941,
            "name": "Commit-0",
            "content": "import { PrismaClient } from '@prisma/client';\nimport * as bcrypt from 'bcrypt';\n\nconst prisma = new PrismaClient();\n\nasync function main() {\n  // Create admin user\n  const adminPassword = 'admin123'; // Change this to a secure password\n  const salt = await bcrypt.genSalt(10);\n  const hashedPassword = await bcrypt.hash(adminPassword, salt);\n\n  const admin = await prisma.user.upsert({\n    where: { email: 'admin12@example.com' },\n    update: {},\n    create: {\n      email: 'admin12@example.com',\n      password: hashedPassword,\n      firstName: 'Admin',\n      lastName: 'User',\n      role: 'ADMIN',\n      active: true,\n    },\n  });\n\n  console.log('Created admin user:', admin.email);\n\n \n  console.log('Seeding completed successfully! (Admin user only)');\n}\n\nmain()\n  .catch((e) => {\n    console.error('Error during seeding:', e);\n    process.exit(1);\n  })\n  .finally(async () => {\n    await prisma.$disconnect();\n  });\n"
        }
    ]
}